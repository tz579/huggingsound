[tool.poetry]
name = "HuggingSound"
version = "0.2.0"
description = "HuggingSound: A toolkit for speech-related tasks based on HuggingFace's tools."
authors = ["Jonatas Grosman <jonatasgrosman@gmail.com>"]
maintainers = ["Jonatas Grosman <jonatasgrosman@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/jonatasgrosman/huggingsound"
repository = "https://github.com/jonatasgrosman/huggingsound"
documentation = "https://github.com/jonatasgrosman/huggingsound"
keywords = ["transformers", "audio", "speech", "automatic speech recognition", "asr", "voice recognition", "speech recognition", "speech-to-text"]

[tool.poetry.urls]
issues = "https://github.com/jonatasgrosman/huggingsound/issues"

[tool.poetry.dependencies]
python = "^3.10"
torch = "2.7.0"
librosa = "0.11.0"
jiwer = "3.1.0"
transformers = "4.51.3"
datasets = "3.5.0"
accelerate = "1.6.0"

[tool.poetry.dev-dependencies]
pytest = "8.3.5"
pytest-cov = "6.1.1"
pytest-randomly = "3.16.0"
coverage = {version = "7.8.0", extras = ["toml"]}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
junit_family = "xunit2"
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests"
]

[tool.coverage.run]
source = ['.']
omit = [
    "huggingsound/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
